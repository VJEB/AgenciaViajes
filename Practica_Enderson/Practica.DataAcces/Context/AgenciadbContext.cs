// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Metadata;
using Agencia.DataAcces;
using Agencia.Entities.Entities;

#nullable disable

namespace Agencia.DataAcces.Context
{
    public partial class AgenciadbContext : DbContext
    {
        public AgenciadbContext()
        {
        }

        public AgenciadbContext(DbContextOptions<AgenciadbContext> options)
            : base(options)
        {
        }

        public virtual DbSet<tbCiudades> tbCiudades { get; set; }
        public virtual DbSet<tbClientes> tbClientes { get; set; }
        public virtual DbSet<tbDetallePorPaquete> tbDetallePorPaquete { get; set; }
        public virtual DbSet<tbEstados> tbEstados { get; set; }
        public virtual DbSet<tbEstadosCiviles> tbEstadosCiviles { get; set; }
        public virtual DbSet<tbFotografiasPorHabitacion> tbFotografiasPorHabitacion { get; set; }
        public virtual DbSet<tbHabitaciones> tbHabitaciones { get; set; }
        public virtual DbSet<tbHabitacionesPorHotel> tbHabitacionesPorHotel { get; set; }
        public virtual DbSet<tbHoteles> tbHoteles { get; set; }
        public virtual DbSet<tbPaises> tbPaises { get; set; }
        public virtual DbSet<tbPantallas> tbPantallas { get; set; }
        public virtual DbSet<tbPantallasPorRoles> tbPantallasPorRoles { get; set; }
        public virtual DbSet<tbPaquetes> tbPaquetes { get; set; }
        public virtual DbSet<tbRoles> tbRoles { get; set; }
        public virtual DbSet<tbTiposDeCamas> tbTiposDeCamas { get; set; }
        public virtual DbSet<tbTiposTransportes> tbTiposTransportes { get; set; }
        public virtual DbSet<tbTransportes> tbTransportes { get; set; }
        public virtual DbSet<tbUsuarios> tbUsuarios { get; set; }

        protected override void OnModelCreating(ModelBuilder modelBuilder)
        {
            modelBuilder.HasAnnotation("Relational:Collation", "SQL_Latin1_General_CP1_CI_AS");

            modelBuilder.Entity<tbCiudades>(entity =>
            {
                entity.HasKey(e => e.Ciud_Id)
                    .HasName("PK__tbCiudades__6B07AA3C63FA00C3");

                entity.ToTable("tbCiudades", "Gral");

                entity.Property(e => e.Ciud_Id)
                    .HasMaxLength(4)
                    .IsUnicode(false);

                entity.Property(e => e.Ciud_Descripcion)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.Ciud_Fecha_Creacion).HasColumnType("datetime");

                entity.Property(e => e.Ciud_Fecha_Modifica).HasColumnType("datetime");

                entity.Property(e => e.Esta_Id)
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.HasOne(d => d.Esta)
                    .WithMany(p => p.tbCiudades)
                    .HasForeignKey(d => d.Esta_Id);
            });

            modelBuilder.Entity<tbClientes>(entity =>
            {
                entity.HasKey(e => e.Clie_Id)
                    .HasName("PK__tbClient__5BB95503F4A2DA75");

                entity.ToTable("tbClientes", "Gral");

                entity.Property(e => e.Ciud_Id)
                    .HasMaxLength(4)
                    .IsUnicode(false);

                entity.Property(e => e.Clie_Apellido)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.Clie_Fecha_Creacion).HasColumnType("datetime");

                entity.Property(e => e.Clie_Fecha_Modifica).HasColumnType("datetime");

                entity.Property(e => e.Clie_Nombre)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.Clie_Sexo)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength(true);

                entity.HasOne(d => d.Ciud)
                    .WithMany(p => p.tbClientes)
                    .HasForeignKey(d => d.Ciud_Id);

                entity.HasOne(d => d.Clie_Usua_CreacionNavigation)
                    .WithMany(p => p.tbClientesClie_Usua_CreacionNavigation)
                    .HasForeignKey(d => d.Clie_Usua_Creacion);

                entity.HasOne(d => d.Clie_Usua_ModificaNavigation)
                    .WithMany(p => p.tbClientesClie_Usua_ModificaNavigation)
                    .HasForeignKey(d => d.Clie_Usua_Modifica);

                entity.HasOne(d => d.EsCi)
                    .WithMany(p => p.tbClientes)
                    .HasForeignKey(d => d.EsCi_Id);
            });

            modelBuilder.Entity<tbDetallePorPaquete>(entity =>
            {
                entity.HasKey(e => e.DePa_Id)
                    .HasName("PK__tbDetall__942F64275D192EBE");

                entity.ToTable("tbDetallePorPaquete", "Agen");

                entity.Property(e => e.DePa_Fecha_Creacion).HasColumnType("datetime");

                entity.Property(e => e.DePa_Fecha_Modifica).HasColumnType("datetime");

                entity.Property(e => e.DePa_Precio).HasColumnType("numeric(8, 2)");

                entity.HasOne(d => d.DePa_Usua_CreacionNavigation)
                    .WithMany(p => p.tbDetallePorPaqueteDePa_Usua_CreacionNavigation)
                    .HasForeignKey(d => d.DePa_Usua_Creacion)
                    .OnDelete(DeleteBehavior.ClientSetNull);

                entity.HasOne(d => d.DePa_Usua_ModificaNavigation)
                    .WithMany(p => p.tbDetallePorPaqueteDePa_Usua_ModificaNavigation)
                    .HasForeignKey(d => d.DePa_Usua_Modifica)
                    .OnDelete(DeleteBehavior.ClientSetNull);

                entity.HasOne(d => d.Paqu)
                    .WithMany(p => p.tbDetallePorPaquete)
                    .HasForeignKey(d => d.Paqu_Id)
                    .OnDelete(DeleteBehavior.ClientSetNull);
            });

            modelBuilder.Entity<tbEstados>(entity =>
            {
                entity.HasKey(e => e.Esta_Id)
                    .HasName("PK__tbEstados__72ABC2CCA10E38B9");

                entity.ToTable("tbEstados", "Gral");

                entity.Property(e => e.Esta_Id)
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.Esta_Descripcion)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.Esta_Fecha_Creacion).HasColumnType("datetime");

                entity.Property(e => e.Esta_Fecha_Modifica).HasColumnType("datetime");

                entity.HasOne(d => d.Esta_Usua_CreacionNavigation)
                    .WithMany(p => p.tbEstadosEsta_Usua_CreacionNavigation)
                    .HasForeignKey(d => d.Esta_Usua_Creacion);

                entity.HasOne(d => d.Esta_Usua_ModificaNavigation)
                    .WithMany(p => p.tbEstadosEsta_Usua_ModificaNavigation)
                    .HasForeignKey(d => d.Esta_Usua_Modifica);

                entity.HasOne(d => d.Pais)
                    .WithMany(p => p.tbEstados)
                    .HasForeignKey(d => d.Pais_Id);
            });

            modelBuilder.Entity<tbEstadosCiviles>(entity =>
            {
                entity.HasKey(e => e.EsCi_Id)
                    .HasName("PK__tbEstado__D52AE7B8BF765F21");

                entity.ToTable("tbEstadosCiviles", "Gral");

                entity.Property(e => e.EsCi_Descripcion)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.EsCi_Fecha_Creacion).HasColumnType("datetime");

                entity.Property(e => e.EsCi_Fecha_Modifica).HasColumnType("datetime");

                entity.HasOne(d => d.EsCi_Usua_CreacionNavigation)
                    .WithMany(p => p.tbEstadosCivilesEsCi_Usua_CreacionNavigation)
                    .HasForeignKey(d => d.EsCi_Usua_Creacion)
                    .HasConstraintName("FK_tbEstadosCiviles_tbUsuarios_Esta_Usua_Creacion");

                entity.HasOne(d => d.EsCi_Usua_ModificaNavigation)
                    .WithMany(p => p.tbEstadosCivilesEsCi_Usua_ModificaNavigation)
                    .HasForeignKey(d => d.EsCi_Usua_Modifica)
                    .HasConstraintName("FK_tbEstadosCiviles_tbUsuarios_Esta_Usua_Modifica");
            });

            modelBuilder.Entity<tbFotografiasPorHabitacion>(entity =>
            {
                entity.HasKey(e => e.FoHa_Id)
                    .HasName("PK__tbFotogr__FFC6D99EC6DD7F69");

                entity.ToTable("tbFotografiasPorHabitacion", "Agen");

                entity.Property(e => e.FoHa_UrlImagen)
                    .IsRequired()
                    .IsUnicode(false);

                entity.HasOne(d => d.HaHo)
                    .WithMany(p => p.tbFotografiasPorHabitacion)
                    .HasForeignKey(d => d.HaHo_Id)
                    .OnDelete(DeleteBehavior.ClientSetNull);
            });

            modelBuilder.Entity<tbHabitaciones>(entity =>
            {
                entity.HasKey(e => e.Habi_Id)
                    .HasName("PK__tbHabita__9183576E9AFFDAEA");

                entity.ToTable("tbHabitaciones", "Agen");

                entity.Property(e => e.Habi_Fecha_Creacion).HasColumnType("datetime");

                entity.Property(e => e.Habi_Fecha_Modifica).HasColumnType("datetime");

                entity.Property(e => e.Habi_Numero)
                    .IsRequired()
                    .HasMaxLength(4)
                    .IsUnicode(false);

                entity.HasOne(d => d.Habi_Usua_CreacionNavigation)
                    .WithMany(p => p.tbHabitacionesHabi_Usua_CreacionNavigation)
                    .HasForeignKey(d => d.Habi_Usua_Creacion)
                    .OnDelete(DeleteBehavior.ClientSetNull);

                entity.HasOne(d => d.Habi_Usua_ModificaNavigation)
                    .WithMany(p => p.tbHabitacionesHabi_Usua_ModificaNavigation)
                    .HasForeignKey(d => d.Habi_Usua_Modifica)
                    .OnDelete(DeleteBehavior.ClientSetNull);

                entity.HasOne(d => d.TiCa)
                    .WithMany(p => p.tbHabitaciones)
                    .HasForeignKey(d => d.TiCa_Id)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_tbHabitaciones_TiCa_Id");
            });

            modelBuilder.Entity<tbHabitacionesPorHotel>(entity =>
            {
                entity.HasKey(e => e.HaHo_Id)
                    .HasName("PK__tbHabita__352A772C0DD89EAD");

                entity.ToTable("tbHabitacionesPorHotel", "Agen");

                entity.Property(e => e.HaHo_CargoExtraPersona).HasColumnType("numeric(8, 2)");

                entity.Property(e => e.HaHo_PrecioPorNoche).HasColumnType("numeric(8, 2)");

                entity.HasOne(d => d.Habi)
                    .WithMany(p => p.tbHabitacionesPorHotel)
                    .HasForeignKey(d => d.Habi_Id)
                    .OnDelete(DeleteBehavior.ClientSetNull);

                entity.HasOne(d => d.Hote)
                    .WithMany(p => p.tbHabitacionesPorHotel)
                    .HasForeignKey(d => d.Hote_Id)
                    .OnDelete(DeleteBehavior.ClientSetNull);
            });

            modelBuilder.Entity<tbHoteles>(entity =>
            {
                entity.HasKey(e => e.Hote_Id)
                    .HasName("PK__tbHotele__297BB723495D4888");

                entity.ToTable("tbHoteles", "Agen");

                entity.Property(e => e.Ciud_Id)
                    .IsRequired()
                    .HasMaxLength(4)
                    .IsUnicode(false);

                entity.Property(e => e.Hote_DireccionExacta)
                    .IsRequired()
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.Hote_Fecha_Creacion).HasColumnType("datetime");

                entity.Property(e => e.Hote_Fecha_Modifica).HasColumnType("datetime");

                entity.Property(e => e.Hote_Imagen)
                    .IsRequired()
                    .IsUnicode(false);

                entity.Property(e => e.Hote_Nombre)
                    .IsRequired()
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.Hote_PrecioTodoIncluido).HasColumnType("numeric(8, 2)");

                entity.HasOne(d => d.Ciud)
                    .WithMany(p => p.tbHoteles)
                    .HasForeignKey(d => d.Ciud_Id)
                    .OnDelete(DeleteBehavior.ClientSetNull);

                entity.HasOne(d => d.Hote_Usua_CreacionNavigation)
                    .WithMany(p => p.tbHotelesHote_Usua_CreacionNavigation)
                    .HasForeignKey(d => d.Hote_Usua_Creacion)
                    .OnDelete(DeleteBehavior.ClientSetNull);

                entity.HasOne(d => d.Hote_Usua_ModificaNavigation)
                    .WithMany(p => p.tbHotelesHote_Usua_ModificaNavigation)
                    .HasForeignKey(d => d.Hote_Usua_Modifica)
                    .OnDelete(DeleteBehavior.ClientSetNull);
            });

            modelBuilder.Entity<tbPaises>(entity =>
            {
                entity.HasKey(e => e.Pais_Id)
                    .HasName("PK__tbPaises__6356B8333AC60BDA");

                entity.ToTable("tbPaises", "Gral");

                entity.Property(e => e.Pais_Descripcion)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.Pais_Fecha_Creacion).HasColumnType("datetime");

                entity.Property(e => e.Pais_Fecha_Modifica).HasColumnType("datetime");

                entity.HasOne(d => d.Pais_Usua_CreacionNavigation)
                    .WithMany(p => p.tbPaisesPais_Usua_CreacionNavigation)
                    .HasForeignKey(d => d.Pais_Usua_Creacion)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_tbPais_tbUsuarios_Pais_Usua_Creacion");

                entity.HasOne(d => d.Pais_Usua_ModificaNavigation)
                    .WithMany(p => p.tbPaisesPais_Usua_ModificaNavigation)
                    .HasForeignKey(d => d.Pais_Usua_Modifica)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_tbPias_tbUsuarios_Pais_Usua_Modifca");
            });

            modelBuilder.Entity<tbPantallas>(entity =>
            {
                entity.HasKey(e => e.Pant_Id)
                    .HasName("PK__tbPantal__CF98C93254D737DD");

                entity.ToTable("tbPantallas", "Acce");

                entity.Property(e => e.Pant_Descripcion)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.Pant_Fecha_Creacion).HasColumnType("datetime");

                entity.Property(e => e.Pant_Fecha_Modifica).HasColumnType("datetime");

                entity.HasOne(d => d.Pant_Usua_CreacionNavigation)
                    .WithMany(p => p.tbPantallasPant_Usua_CreacionNavigation)
                    .HasForeignKey(d => d.Pant_Usua_Creacion);

                entity.HasOne(d => d.Pant_Usua_ModificaNavigation)
                    .WithMany(p => p.tbPantallasPant_Usua_ModificaNavigation)
                    .HasForeignKey(d => d.Pant_Usua_Modifica);
            });

            modelBuilder.Entity<tbPantallasPorRoles>(entity =>
            {
                entity.HasKey(e => e.Paro_Id)
                    .HasName("PK__tbPantal__53819DE90C8B2039");

                entity.ToTable("tbPantallasPorRoles", "Acce");

                entity.Property(e => e.Paro_Fecha_Creacion).HasColumnType("datetime");

                entity.Property(e => e.Paro_Fecha_Modifica).HasColumnType("datetime");

                entity.HasOne(d => d.Pant)
                    .WithMany(p => p.tbPantallasPorRoles)
                    .HasForeignKey(d => d.Pant_Id);

                entity.HasOne(d => d.Paro_Usua_CreacionNavigation)
                    .WithMany(p => p.tbPantallasPorRolesParo_Usua_CreacionNavigation)
                    .HasForeignKey(d => d.Paro_Usua_Creacion);

                entity.HasOne(d => d.Paro_Usua_ModificaNavigation)
                    .WithMany(p => p.tbPantallasPorRolesParo_Usua_ModificaNavigation)
                    .HasForeignKey(d => d.Paro_Usua_Modifica);

                entity.HasOne(d => d.Rol)
                    .WithMany(p => p.tbPantallasPorRoles)
                    .HasForeignKey(d => d.Rol_Id);
            });

            modelBuilder.Entity<tbPaquetes>(entity =>
            {
                entity.HasKey(e => e.Paqu_Id)
                    .HasName("PK__tbPaquet__39E5493D4D6EB5A2");

                entity.ToTable("tbPaquetes", "Agen");

                entity.Property(e => e.Paqu_Fecha_Creacion).HasColumnType("datetime");

                entity.Property(e => e.Paqu_Fecha_Modifica).HasColumnType("datetime");

                entity.Property(e => e.Paqu_Nombre)
                    .IsRequired()
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.HasOne(d => d.Clie)
                    .WithMany(p => p.tbPaquetes)
                    .HasForeignKey(d => d.Clie_Id)
                    .OnDelete(DeleteBehavior.ClientSetNull);

                entity.HasOne(d => d.Paqu_Usua_CreacionNavigation)
                    .WithMany(p => p.tbPaquetesPaqu_Usua_CreacionNavigation)
                    .HasForeignKey(d => d.Paqu_Usua_Creacion)
                    .OnDelete(DeleteBehavior.ClientSetNull);

                entity.HasOne(d => d.Paqu_Usua_ModificaNavigation)
                    .WithMany(p => p.tbPaquetesPaqu_Usua_ModificaNavigation)
                    .HasForeignKey(d => d.Paqu_Usua_Modifica)
                    .OnDelete(DeleteBehavior.ClientSetNull);
            });

            modelBuilder.Entity<tbRoles>(entity =>
            {
                entity.HasKey(e => e.Rol_Id)
                    .HasName("PK__tbRoles__795EBD49E2DD24DB");

                entity.ToTable("tbRoles", "Acce");

                entity.Property(e => e.Rol_Descripcion)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.Rol_Fecha_Creacion).HasColumnType("datetime");

                entity.Property(e => e.Rol_Fecha_Modifica).HasColumnType("datetime");

                entity.HasOne(d => d.Rol_Usua_CreacionNavigation)
                    .WithMany(p => p.tbRolesRol_Usua_CreacionNavigation)
                    .HasForeignKey(d => d.Rol_Usua_Creacion);

                entity.HasOne(d => d.Rol_Usua_ModificaNavigation)
                    .WithMany(p => p.tbRolesRol_Usua_ModificaNavigation)
                    .HasForeignKey(d => d.Rol_Usua_Modifica);
            });

            modelBuilder.Entity<tbTiposDeCamas>(entity =>
            {
                entity.HasKey(e => e.TiCa_Id)
                    .HasName("PK__tbTiposD__8D3B85D24A4E81BD");

                entity.ToTable("tbTiposDeCamas", "Gral");

                entity.Property(e => e.TiCa_Fecha_Creacion).HasColumnType("datetime");

                entity.Property(e => e.TiCa_Fecha_Modifica).HasColumnType("datetime");

                entity.Property(e => e.TiCa_Nombre)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.HasOne(d => d.TiCa_Usua_CreacionNavigation)
                    .WithMany(p => p.tbTiposDeCamasTiCa_Usua_CreacionNavigation)
                    .HasForeignKey(d => d.TiCa_Usua_Creacion)
                    .OnDelete(DeleteBehavior.ClientSetNull);

                entity.HasOne(d => d.TiCa_Usua_ModificaNavigation)
                    .WithMany(p => p.tbTiposDeCamasTiCa_Usua_ModificaNavigation)
                    .HasForeignKey(d => d.TiCa_Usua_Modifica)
                    .OnDelete(DeleteBehavior.ClientSetNull);
            });

            modelBuilder.Entity<tbTiposTransportes>(entity =>
            {
                entity.HasKey(e => e.TiTr_Id)
                    .HasName("PK__tbTiposT__A09FE04BE09CB252");

                entity.ToTable("tbTiposTransportes", "Gral");

                entity.Property(e => e.TiTr_Descripcion)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.TiTr_Fecha_Creacion).HasColumnType("datetime");

                entity.Property(e => e.TiTr_Fecha_Modifica).HasColumnType("datetime");

                entity.HasOne(d => d.TiTr_Usua_CreacionNavigation)
                    .WithMany(p => p.tbTiposTransportesTiTr_Usua_CreacionNavigation)
                    .HasForeignKey(d => d.TiTr_Usua_Creacion)
                    .OnDelete(DeleteBehavior.ClientSetNull);

                entity.HasOne(d => d.TiTr_Usua_ModificaNavigation)
                    .WithMany(p => p.tbTiposTransportesTiTr_Usua_ModificaNavigation)
                    .HasForeignKey(d => d.TiTr_Usua_Modifica)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_tbTiposTransportes_tbUsuarios_TiTr_Usua_Modifca");
            });

            modelBuilder.Entity<tbTransportes>(entity =>
            {
                entity.HasKey(e => e.Tran_Id)
                    .HasName("PK__tbTransp__950EE6B0AE77E54B");

                entity.ToTable("tbTransportes", "Agen");

                entity.Property(e => e.Tran_Fecha_Creacion).HasColumnType("datetime");

                entity.Property(e => e.Tran_Fecha_Modifica).HasColumnType("datetime");

                entity.Property(e => e.Tran_Precio).HasColumnType("numeric(8, 2)");

                entity.Property(e => e.Tran_PuntoFinal)
                    .HasMaxLength(4)
                    .IsUnicode(false);

                entity.Property(e => e.Tran_PuntoInicio)
                    .HasMaxLength(4)
                    .IsUnicode(false);

                entity.HasOne(d => d.TiTr)
                    .WithMany(p => p.tbTransportes)
                    .HasForeignKey(d => d.TiTr_Id);

                entity.HasOne(d => d.Tran_PuntoFinalNavigation)
                    .WithMany(p => p.tbTransportesTran_PuntoFinalNavigation)
                    .HasForeignKey(d => d.Tran_PuntoFinal);

                entity.HasOne(d => d.Tran_PuntoInicioNavigation)
                    .WithMany(p => p.tbTransportesTran_PuntoInicioNavigation)
                    .HasForeignKey(d => d.Tran_PuntoInicio);

                entity.HasOne(d => d.Tran_Usua_CreacionNavigation)
                    .WithMany(p => p.tbTransportesTran_Usua_CreacionNavigation)
                    .HasForeignKey(d => d.Tran_Usua_Creacion)
                    .OnDelete(DeleteBehavior.ClientSetNull);

                entity.HasOne(d => d.Tran_Usua_ModificaNavigation)
                    .WithMany(p => p.tbTransportesTran_Usua_ModificaNavigation)
                    .HasForeignKey(d => d.Tran_Usua_Modifica)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_tbTransportes_tbUsuarios_Tran_Usua_Modifca");
            });

            modelBuilder.Entity<tbUsuarios>(entity =>
            {
                entity.HasKey(e => e.Usua_Id)
                    .HasName("PK__tbUsuari__E863C8EE16400214");

                entity.ToTable("tbUsuarios", "Acce");

                entity.Property(e => e.Usua_Contra)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.Usua_Fecha_Creacion).HasColumnType("datetime");

                entity.Property(e => e.Usua_Fecha_Modifica).HasColumnType("datetime");

                entity.Property(e => e.Usua_Usuario)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.HasOne(d => d.Clie)
                    .WithMany(p => p.tbUsuarios)
                    .HasForeignKey(d => d.Clie_Id);

                entity.HasOne(d => d.Rol)
                    .WithMany(p => p.tbUsuarios)
                    .HasForeignKey(d => d.Rol_Id);

                entity.HasOne(d => d.Usua_Usua_CreacionNavigation)
                    .WithMany(p => p.InverseUsua_Usua_CreacionNavigation)
                    .HasForeignKey(d => d.Usua_Usua_Creacion);

                entity.HasOne(d => d.Usua_Usua_ModificaNavigation)
                    .WithMany(p => p.InverseUsua_Usua_ModificaNavigation)
                    .HasForeignKey(d => d.Usua_Usua_Modifica);
            });

            OnModelCreatingPartial(modelBuilder);
        }

        partial void OnModelCreatingPartial(ModelBuilder modelBuilder);
    }
}