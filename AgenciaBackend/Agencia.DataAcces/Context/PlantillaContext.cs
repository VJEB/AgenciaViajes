// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Metadata;
using Practica.DataAcces;
using Practica.Entities.Entities;

#nullable disable

namespace Practica.DataAcces.Context
{
    public partial class PlantillaContext : DbContext
    {
        public PlantillaContext()
        {
        }

        public PlantillaContext(DbContextOptions<PlantillaContext> options)
            : base(options)
        {
        }

        public virtual DbSet<tbCargos> tbCargos { get; set; }
        public virtual DbSet<tbClientes> tbClientes { get; set; }
        public virtual DbSet<tbDepartamentos> tbDepartamentos { get; set; }
        public virtual DbSet<tbEmpleados> tbEmpleados { get; set; }
        public virtual DbSet<tbEstadosCiviles> tbEstadosCiviles { get; set; }
        public virtual DbSet<tbMunicipios> tbMunicipios { get; set; }
        public virtual DbSet<tbPantallas> tbPantallas { get; set; }
        public virtual DbSet<tbPantallasPorRoles> tbPantallasPorRoles { get; set; }
        public virtual DbSet<tbRoles> tbRoles { get; set; }
        public virtual DbSet<tbUsuarios> tbUsuarios { get; set; }

        protected override void OnModelCreating(ModelBuilder modelBuilder)
        {
            modelBuilder.HasAnnotation("Relational:Collation", "Modern_Spanish_CI_AS");

            modelBuilder.Entity<tbCargos>(entity =>
            {
                entity.HasKey(e => e.Carg_Id)
                    .HasName("PK__tbCargos__B0D859FA5C931F26");

                entity.ToTable("tbCargos", "Gral");

                entity.Property(e => e.Carg_Descripcion)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.Carg_Fecha_Creacion).HasColumnType("datetime");

                entity.Property(e => e.Carg_Fecha_Modifica).HasColumnType("datetime");

                entity.HasOne(d => d.Carg_Usua_CreacionNavigation)
                    .WithMany(p => p.tbCargosCarg_Usua_CreacionNavigation)
                    .HasForeignKey(d => d.Carg_Usua_Creacion);

                entity.HasOne(d => d.Carg_Usua_ModificaNavigation)
                    .WithMany(p => p.tbCargosCarg_Usua_ModificaNavigation)
                    .HasForeignKey(d => d.Carg_Usua_Modifica);
            });

            modelBuilder.Entity<tbClientes>(entity =>
            {
                entity.HasKey(e => e.Clie_Id)
                    .HasName("PK__tbClient__5BB9550390DE345B");

                entity.ToTable("tbClientes", "Gral");

                entity.Property(e => e.Clie_Apellido)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.Clie_Fecha_Creacion).HasColumnType("datetime");

                entity.Property(e => e.Clie_Fecha_Modifica).HasColumnType("datetime");

                entity.Property(e => e.Clie_Nombre)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.Clie_Sexo)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength(true);

                entity.Property(e => e.Muni_Id)
                    .HasMaxLength(4)
                    .IsUnicode(false);

                entity.HasOne(d => d.Clie_Usua_CreacionNavigation)
                    .WithMany(p => p.tbClientesClie_Usua_CreacionNavigation)
                    .HasForeignKey(d => d.Clie_Usua_Creacion);

                entity.HasOne(d => d.Clie_Usua_ModificaNavigation)
                    .WithMany(p => p.tbClientesClie_Usua_ModificaNavigation)
                    .HasForeignKey(d => d.Clie_Usua_Modifica);

                entity.HasOne(d => d.Esta)
                    .WithMany(p => p.tbClientes)
                    .HasForeignKey(d => d.Esta_Id);

                entity.HasOne(d => d.Muni)
                    .WithMany(p => p.tbClientes)
                    .HasForeignKey(d => d.Muni_Id);
            });

            modelBuilder.Entity<tbDepartamentos>(entity =>
            {
                entity.HasKey(e => e.Dept_Id)
                    .HasName("PK__tbDepart__72ABC2CC41D65C51");

                entity.ToTable("tbDepartamentos", "Gral");

                entity.Property(e => e.Dept_Id)
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.Dept_Descripcion)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.Dept_Fecha_Creacion).HasColumnType("datetime");

                entity.Property(e => e.Dept_Fecha_Modifica).HasColumnType("datetime");

                entity.HasOne(d => d.Dept_Usua_CreacionNavigation)
                    .WithMany(p => p.tbDepartamentosDept_Usua_CreacionNavigation)
                    .HasForeignKey(d => d.Dept_Usua_Creacion);

                entity.HasOne(d => d.Dept_Usua_ModificaNavigation)
                    .WithMany(p => p.tbDepartamentosDept_Usua_ModificaNavigation)
                    .HasForeignKey(d => d.Dept_Usua_Modifica);
            });

            modelBuilder.Entity<tbEmpleados>(entity =>
            {
                entity.HasKey(e => e.Empl_Id)
                    .HasName("PK__tbEmplea__2EB12E869730DA5E");

                entity.ToTable("tbEmpleados", "Gral");

                entity.Property(e => e.Empl_Apellido)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.Empl_Fecha_Creacion).HasColumnType("datetime");

                entity.Property(e => e.Empl_Fecha_Modifica).HasColumnType("datetime");

                entity.Property(e => e.Empl_Nombre)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.Empl_Sexo)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength(true);

                entity.Property(e => e.Muni_Id)
                    .HasMaxLength(4)
                    .IsUnicode(false);

                entity.HasOne(d => d.Carg)
                    .WithMany(p => p.tbEmpleados)
                    .HasForeignKey(d => d.Carg_Id);

                entity.HasOne(d => d.Empl_Usua_CreacionNavigation)
                    .WithMany(p => p.tbEmpleadosEmpl_Usua_CreacionNavigation)
                    .HasForeignKey(d => d.Empl_Usua_Creacion);

                entity.HasOne(d => d.Empl_Usua_ModificaNavigation)
                    .WithMany(p => p.tbEmpleadosEmpl_Usua_ModificaNavigation)
                    .HasForeignKey(d => d.Empl_Usua_Modifica);

                entity.HasOne(d => d.Esta)
                    .WithMany(p => p.tbEmpleados)
                    .HasForeignKey(d => d.Esta_Id);

                entity.HasOne(d => d.Muni)
                    .WithMany(p => p.tbEmpleados)
                    .HasForeignKey(d => d.Muni_Id);
            });

            modelBuilder.Entity<tbEstadosCiviles>(entity =>
            {
                entity.HasKey(e => e.Esta_Id)
                    .HasName("PK__tbEstado__D52AE7B815BAF446");

                entity.ToTable("tbEstadosCiviles", "Gral");

                entity.Property(e => e.Esta_Descripcion)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.Esta_Fecha_Creacion).HasColumnType("datetime");

                entity.Property(e => e.Esta_Fecha_Modifica).HasColumnType("datetime");

                entity.HasOne(d => d.Esta_Usua_CreacionNavigation)
                    .WithMany(p => p.tbEstadosCivilesEsta_Usua_CreacionNavigation)
                    .HasForeignKey(d => d.Esta_Usua_Creacion);

                entity.HasOne(d => d.Esta_Usua_ModificaNavigation)
                    .WithMany(p => p.tbEstadosCivilesEsta_Usua_ModificaNavigation)
                    .HasForeignKey(d => d.Esta_Usua_Modifica);
            });

            modelBuilder.Entity<tbMunicipios>(entity =>
            {
                entity.HasKey(e => e.Muni_Id)
                    .HasName("PK__tbMunici__6B07AA3C1DEBD95C");

                entity.ToTable("tbMunicipios", "Gral");

                entity.Property(e => e.Muni_Id)
                    .HasMaxLength(4)
                    .IsUnicode(false);

                entity.Property(e => e.Dept_Id)
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.Muni_Descripcion)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.Muni_Fecha_Creacion).HasColumnType("datetime");

                entity.Property(e => e.Muni_Fecha_Modifica).HasColumnType("datetime");

                entity.HasOne(d => d.Dept)
                    .WithMany(p => p.tbMunicipios)
                    .HasForeignKey(d => d.Dept_Id);

                entity.HasOne(d => d.Muni_Usua_CreacionNavigation)
                    .WithMany(p => p.tbMunicipiosMuni_Usua_CreacionNavigation)
                    .HasForeignKey(d => d.Muni_Usua_Creacion);

                entity.HasOne(d => d.Muni_Usua_ModificaNavigation)
                    .WithMany(p => p.tbMunicipiosMuni_Usua_ModificaNavigation)
                    .HasForeignKey(d => d.Muni_Usua_Modifica);
            });

            modelBuilder.Entity<tbPantallas>(entity =>
            {
                entity.HasKey(e => e.Pant_Id)
                    .HasName("PK__tbPantal__CF98C9329285F267");

                entity.ToTable("tbPantallas", "Acce");

                entity.Property(e => e.Pant_Descripcion)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.Pant_Fecha_Creacion).HasColumnType("datetime");

                entity.Property(e => e.Pant_Fecha_Modifica).HasColumnType("datetime");

                entity.HasOne(d => d.Pant_Usua_CreacionNavigation)
                    .WithMany(p => p.tbPantallasPant_Usua_CreacionNavigation)
                    .HasForeignKey(d => d.Pant_Usua_Creacion);

                entity.HasOne(d => d.Pant_Usua_ModificaNavigation)
                    .WithMany(p => p.tbPantallasPant_Usua_ModificaNavigation)
                    .HasForeignKey(d => d.Pant_Usua_Modifica);
            });

            modelBuilder.Entity<tbPantallasPorRoles>(entity =>
            {
                entity.HasKey(e => e.Paro_Id)
                    .HasName("PK__tbPantal__53819DE9590C892F");

                entity.ToTable("tbPantallasPorRoles", "Acce");

                entity.Property(e => e.Paro_Fecha_Creacion).HasColumnType("datetime");

                entity.Property(e => e.Paro_Fecha_Modifica).HasColumnType("datetime");

                entity.HasOne(d => d.Pant)
                    .WithMany(p => p.tbPantallasPorRoles)
                    .HasForeignKey(d => d.Pant_Id);

                entity.HasOne(d => d.Paro_Usua_CreacionNavigation)
                    .WithMany(p => p.tbPantallasPorRolesParo_Usua_CreacionNavigation)
                    .HasForeignKey(d => d.Paro_Usua_Creacion);

                entity.HasOne(d => d.Paro_Usua_ModificaNavigation)
                    .WithMany(p => p.tbPantallasPorRolesParo_Usua_ModificaNavigation)
                    .HasForeignKey(d => d.Paro_Usua_Modifica);

                entity.HasOne(d => d.Rol)
                    .WithMany(p => p.tbPantallasPorRoles)
                    .HasForeignKey(d => d.Rol_Id);
            });

            modelBuilder.Entity<tbRoles>(entity =>
            {
                entity.HasKey(e => e.Rol_Id)
                    .HasName("PK__tbRoles__795EBD49BF4500AA");

                entity.ToTable("tbRoles", "Acce");

                entity.Property(e => e.Rol_Descripcion)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.Rol_Fecha_Creacion).HasColumnType("datetime");

                entity.Property(e => e.Rol_Fecha_Modifica).HasColumnType("datetime");

                entity.HasOne(d => d.Rol_Usua_CreacionNavigation)
                    .WithMany(p => p.tbRolesRol_Usua_CreacionNavigation)
                    .HasForeignKey(d => d.Rol_Usua_Creacion);

                entity.HasOne(d => d.Rol_Usua_ModificaNavigation)
                    .WithMany(p => p.tbRolesRol_Usua_ModificaNavigation)
                    .HasForeignKey(d => d.Rol_Usua_Modifica);
            });

            modelBuilder.Entity<tbUsuarios>(entity =>
            {
                entity.HasKey(e => e.Usua_Id)
                    .HasName("PK__tbUsuari__E863C8EE0BE795D4");

                entity.ToTable("tbUsuarios", "Acce");

                entity.Property(e => e.Usua_Contra)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.Usua_Fecha_Creacion).HasColumnType("datetime");

                entity.Property(e => e.Usua_Fecha_Modifica).HasColumnType("datetime");

                entity.Property(e => e.Usua_Usuario)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.HasOne(d => d.Empl)
                    .WithMany(p => p.tbUsuarios)
                    .HasForeignKey(d => d.Empl_Id);

                entity.HasOne(d => d.Rol)
                    .WithMany(p => p.tbUsuarios)
                    .HasForeignKey(d => d.Rol_Id);

                entity.HasOne(d => d.Usua_Usua_CreacionNavigation)
                    .WithMany(p => p.InverseUsua_Usua_CreacionNavigation)
                    .HasForeignKey(d => d.Usua_Usua_Creacion);

                entity.HasOne(d => d.Usua_Usua_ModificaNavigation)
                    .WithMany(p => p.InverseUsua_Usua_ModificaNavigation)
                    .HasForeignKey(d => d.Usua_Usua_Modifica);
            });

            OnModelCreatingPartial(modelBuilder);
        }

        partial void OnModelCreatingPartial(ModelBuilder modelBuilder);
    }
}